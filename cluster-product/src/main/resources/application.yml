debug: true
server:
  port: 3002
  error:
    path: /error
spring:
  #  profiles:
  #    active: dev
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid: # 下面是自定义配置DruidProperties
      master: # 主数据源
        enabled: true
        name: primary-db
        driverClassName: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/cluster?serverTimezone=GMT%2B8
        username: root
        password: zxc123456
        #初始化大小
        initialSize: 5
        #最小值
        minIdle: 5
        #最大值
        maxActive: 20
        #最大等待时间，配置获取连接等待超时，时间单位都是毫秒ms
        maxWait: 60000
        #配置间隔多久才进行一次检测，检测需要关闭的空闲连接
        timeBetweenEvictionRunsMillis: 60000
        #配置一个连接在池中最小生存的时间
        minEvictableIdleTimeMillis: 300000
        validationQuery: SELECT 1 FROM DUAL
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        poolPreparedStatements: true
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，
        #'wall'用于防火墙，SpringBoot中没有log4j，我改成了log4j2
        filters: stat,wall,log4j2
        #最大PSCache连接
        maxPoolPreparedStatementPerConnectionSize: 20
        useGlobalDataSourceStat: true
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
      slave: # 从数据源
        enabled: true
        name: slave-db
        driverClassName: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/cluster_slave?serverTimezone=GMT%2B8
        username: root
        password: zxc123456
        #初始化大小
        initialSize: 5
        #最小值
        minIdle: 5
        #最大值
        maxActive: 20
        #最大等待时间，配置获取连接等待超时，时间单位都是毫秒ms
        maxWait: 60000
        #配置间隔多久才进行一次检测，检测需要关闭的空闲连接
        timeBetweenEvictionRunsMillis: 60000
        #配置一个连接在池中最小生存的时间
        minEvictableIdleTimeMillis: 300000
        validationQuery: SELECT 1 FROM DUAL
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        poolPreparedStatements: true
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，
        #'wall'用于防火墙，SpringBoot中没有log4j，我改成了log4j2
        filters: stat,wall,log4j2
        #最大PSCache连接
        maxPoolPreparedStatementPerConnectionSize: 20
        useGlobalDataSourceStat: true
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
      # 配置StatFilter
      web-stat-filter:
        #默认为false，设置为true启动
        enabled: true
        urlPattern: "/*"
        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
      #配置StatViewServlet
      stat-view-servlet:
        urlPattern: "/druid/*"
        #允许那些ip
        allow: 127.0.0.1
        loginUsername: admin
        loginPassword: 123456
        #禁止那些ip
        deny: 192.168.1.102
        #是否可以重置
        resetEnable: true
        #启用
        enabled: true

  #  redis:
  #      host: 127.0.0.1
  #      port: 6379
  jpa:
    # 控制台显示SQL
    show-sql: true
    hibernate:
      ddl-auto: update  #必须添加Jpa 依赖才行
    # 会根据就映射实体类自动创建或更新数据表
    # 默认创建表类型是MyISAM，是非事务安全的，所以无法实现事物回滚
    # 指定如下方言: 创建的表类型是Innodb，才可以进行对事物的回滚。
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
  #开发环境下关闭thymeleaf模板缓存，thymeleaf默认是开启状态
  #  thymeleaf:
  #    cache: false
  messages:
    basename: i18n.msg
    encoding: utf-8
# 调整日志级别: trace < debug < info < warn < error
logging:
  level:
    root: info
    com:
      example:
        product:
          mapper: debug
  file:
    # spring.log 输出路径
    path: log/
  # 日志输出格式说明:
  # %d 输出日期时间，
  # %thread 输出当前线程名，
  # %-5level 输出日志级别，左对齐5个字符宽度
  # %logger{50} 输出全类名最长50个字符，超过按照句点分割
  # %msg 日志信息
  # %n 换行符
  pattern:
    # 修改控制台输出的日志格式
    console: '%d{yyyy-MM-dd} [%thread] %-5level %logger{50} - %msg%n'
    # 修改文件中输出的日志格式
    file: '%d{yyyy-MM-dd HH:mm:ss.SSS} >>> [%thread] >>> %-5level >>> %logger{50} >>> %msg%n'
mybatis:
  config-location: classpath:mybatis/mybatis-config.xml
  mapper-locations: classpath:mybatis/mapper/*.xml


